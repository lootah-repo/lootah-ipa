on:
  push:
    branches: ["tree/main"]
  release:
    types:
      - published
      - deleted
      - edited
      - prereleased
      - released
      - created

jobs:
  build:
    runs-on: ubuntu-20.04

    steps:
      - name: checkout repo content
        uses: actions/checkout@v3 # checkout the repository content to github runner.
      - name: setup python
        uses: actions/setup-python@v4
        with:
          python-version: 3.8 #install the python needed
      - name: install python packages
        run: |
          pip install PyGithub pandas
      - name: execute py script # run the run.py to get the latest data
        env: 
          EMAIL_ADDRESS: ${{ secrets.EMAIL_ADDRESS }}
          EMAIL_PASSWORD: ${{ secrets.EMAIL_PASSWORD }}
          EMAIL_RECIPIENT: ${{ secrets.EMAIL_RECIPIENT }}
          GITHUB_TOKEN: ${{ github.token }}
        run: |
          python generate_json.py -t ${{ secrets.GITHUB_TOKEN }}

  update_latest_release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Update Latest Release
        run: |
          # Get the latest release tag name
          LATEST_RELEASE_TAG=$(curl -s -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" "https://github.com/lootah-repo/lootah-ipa/releases/latest" | jq -r .tag_name)

          # Update the tag associated with the latest release
          git tag -fa "$LATEST_RELEASE_TAG" -m "Set as the latest release"
          git push origin "$LATEST_RELEASE_TAG" --force
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
